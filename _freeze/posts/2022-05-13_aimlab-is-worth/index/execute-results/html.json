{
  "hash": "f39e5b43eb6e42a29ac101ba2f448dc5",
  "result": {
    "markdown": "---\ntitle: \"Aimlab is worth?\"\nsubtitle: | \n  I tested the famous Aimlab aim training platform for 30 days. \n  With full access to historical data, I analyzed whether the training \n  really worked for me.\ndate: \"2022-05-12\"\nformat:\n  html:\n    code-fold: true\ncategories: [Games, DataViz]\nimage: \"img/aimlab.jpg\"\n---\n\n<!--------------- post begins here ----------------->\n\n## Utils\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(magrittr)\nread_csv_quiet <- purrr::quietly(readr::read_csv)\n```\n:::\n\n## Load Data\n\n::: {.cell}\n\n```{.r .cell-code}\naimlab_tasks <- c(\"StrafetrackPrecision\", \"MotiontrackUltimate\",\n                  \"MicroshotPrecision\", \"MotionshotPrecision\",\n                  \"SpidershotSpeed\", \"SixshotUltimate\")\n\nstart_training <- lubridate::mdy(\"05/10/2022\")\n\nda_aimlab <- purrr::map(aimlab_tasks, function(aim_task) {\n  read_csv_quiet(glue::glue(\"data/{aim_task}.csv\")) %>%\n    purrr::pluck(\"result\") %>%\n    janitor::clean_names() %>%\n    dplyr::mutate(create_date = lubridate::mdy_hms(create_date),\n                  create_date_group = lubridate::as_date(create_date)) %>%\n    dplyr::filter(create_date > start_training) %>%\n    dplyr::group_by(create_date_group) %>%\n    dplyr::top_n(5, create_date) %>%\n    dplyr::ungroup() %>%\n    dplyr::select(-weapon_name, -map, -version, -mode) %>%\n    dplyr::mutate(day = dplyr::dense_rank(create_date_group),\n                  day = factor(day),\n                  create_date_group = factor(create_date_group))\n})\n```\n:::\n\n## The Aimlab Playlist\n\n## Analyzing the Results\n\n#### Strafetrack - Precision\n\n*An orb strafes back and forth at random testing your ability to track movement and keep your crosshair on the target*\n\n<iframe class=\"d-block mx-auto\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/puwVY1_KrKg\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n#### Motiontrack - Ultimate\n\n*Shoot the center orb to spawn a new moving orb in a random location. Flick to the target quickly, and transition into a smooth tracking motion until the orb is destroyed.*\n\n<iframe class=\"d-block mx-auto\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/GMMEkEB5yYc\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n::: {.cell layout-align=\"center\" fig.dpi='300'}\n\n```{.r .cell-code}\nda_aimlab %>%\n  purrr::pluck(2) %>%\n  tidyr::pivot_longer(miss_up:miss_down_right,\n                      names_to = \"side\", values_to = \"error\") %>%\n  dplyr::mutate(side = stringr::str_extract(side, r\"{(?<=miss_).+}\"),\n                side = stringr::str_replace(side, \"_\", \" \"),\n                side = stringr::str_to_title(side)) %>%\n  ggplot2::ggplot() +\n  ggplot2::aes(x = day, y = error, color = side, group = side) +\n  ggplot2::stat_summary(fun = mean, geom = \"point\", size = 9, alpha = 0.6) +\n  ggplot2::stat_summary(fun = mean, geom = \"line\", size = 4) +\n  ggplot2::scale_y_continuous(breaks = scales::pretty_breaks(8)) +\n  ggplot2::labs(caption = \"Data: Aimlab | Visualization by @damarals_\") +\n  danlib::dan_theme(base_size = 60, axis_title_size = 55, \n                    axis_text_x_size = 54, caption_plot_size = 35)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=1728}\n:::\n:::\n\n#### Microshot - Precision\n\n*This is the ultimate test of both speed and precision. Shoot the center orb to spawn another orb in a random location, but be quick, the newly spawned orb only stays up for a short duration and you lose points for every missed orb.*\n\n<iframe class=\"d-block mx-auto\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/qvhZgUSf1P0\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n#### Motionshot - Precision\n\n*Practice the speed of your aim in all directions. Shoot the center orb to spawn another orb in a random location, but be quick, the newly spawned orb only stays up for a short duration and you lose points for every missed orb.*\n\n<iframe class=\"d-block mx-auto\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/yBaRowF5iiQ\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n#### Spidershot - Speed\n\n*This is the ultimate test of both speed and precision. Shoot the center orb to spawn another orb in a random location, but be quick, the newly spawned orb only stays up for a short duration and you lose points for every missed orb.*\n\n<iframe class=\"d-block mx-auto\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/SYrYHqvauPA\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n#### Sixshot - Ultimate\n\n*Six targets spawn randomly on the screen. Kill one and another spawns so there are always six targets on screen. This task is meant to improve your flicking to targets.*\n\n<iframe class=\"d-block mx-auto\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/FFumeMxzSF0\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n::: {.cell layout-align=\"center\" fig.dpi='300'}\n\n```{.r .cell-code}\nda_aimlab %>%\n  purrr::pluck(6) %>%\n  dplyr::mutate(accuracy = kill_total/shots_total) %>%\n  ggplot2::ggplot() +\n  ggplot2::aes(x = day, y = accuracy, group = 1) +\n  ggplot2::stat_summary(fun = mean, geom = \"point\", size = 9, alpha = 0.6) +\n  ggplot2::stat_summary(fun = mean, geom = \"line\", size = 4) +\n  ggplot2::scale_y_continuous(labels = scales::percent_format(accuracy = 1),\n                              breaks = scales::pretty_breaks(8)) +\n  ggplot2::labs(caption = \"Data: Aimlab | Visualization by @damarals_\") +\n  danlib::dan_theme(base_size = 60, axis_title_size = 55, \n                    axis_text_x_size = 54, caption_plot_size = 35)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){fig-align='center' width=1728}\n:::\n:::\n\n\n::: {.cell layout-align=\"center\" fig.dpi='300'}\n\n```{.r .cell-code}\nda_aimlab %>%\n  purrr::pluck(6) %>%\n  ggplot2::ggplot() +\n  ggplot2::aes(x = day, y = kills_per_sec, group = 1) +\n  ggplot2::stat_summary(fun = mean, geom = \"point\", size = 9, alpha = 0.6) +\n  ggplot2::stat_summary(fun = mean, geom = \"line\", size = 4) +\n  ggplot2::scale_y_continuous(breaks = scales::pretty_breaks(8)) +\n  ggplot2::labs(y = \"kills per second\",\n                caption = \"Data: Aimlab | Visualization by @damarals_\") +\n  danlib::dan_theme(base_size = 60, axis_title_size = 55, \n                    axis_text_x_size = 54, caption_plot_size = 35)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){fig-align='center' width=1728}\n:::\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}